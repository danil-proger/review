#include <bits/stdc++.h>
#include <limits>

long long INF = std::numeric_limits<long long>::max();

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0);
    long long n;
    std::cin >> n;
    std::vector<std::vector<long long>> dp(n + 1, std::vector<long long>(n + 1));
    dp[0][0] = 1;
    for(long long i = 0; i < n + 1; ++i) {
        for(long long j = 0; j < n + 1; ++j) {
            if (dp[i][j] > 0) {
                for (long long value = 2 * j; value < n + 1 - i; ++value) {
                    dp[i + value][value] += dp[i][j];
                }
            }
        }
    }
    long long result = 0;
    for(long long i = 0; i < n + 1; ++i) {
        result += dp[n][i];
    }
    std::cout << result / 2;
}
